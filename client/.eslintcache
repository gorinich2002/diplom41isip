[{"C:\\Users\\user\\Desktop\\projects\\diplom\\client\\src\\index.js":"1","C:\\Users\\user\\Desktop\\projects\\diplom\\client\\src\\todo\\Header.js":"2","C:\\Users\\user\\Desktop\\projects\\diplom\\client\\src\\todo\\Menu.js":"3","C:\\Users\\user\\Desktop\\projects\\diplom\\client\\src\\todo\\ProductList.js":"4","C:\\Users\\user\\Desktop\\projects\\diplom\\client\\src\\reportWebVitals.js":"5","C:\\Users\\user\\Desktop\\projects\\diplom\\client\\src\\todo\\Cart.js":"6","C:\\Users\\user\\Desktop\\projects\\diplom\\client\\src\\todo\\About.js":"7","C:\\Users\\user\\Desktop\\projects\\diplom\\client\\src\\todo\\LoginForm.js":"8","C:\\Users\\user\\Desktop\\projects\\diplom\\client\\src\\todo\\OrderConfirm.js":"9","C:\\Users\\user\\Desktop\\projects\\diplom\\client\\src\\actions\\actions.js":"10","C:\\Users\\user\\Desktop\\projects\\diplom\\client\\src\\redusers\\mainReduser.js":"11","C:\\Users\\user\\Desktop\\projects\\diplom\\client\\src\\hooks\\http.hook.js":"12","C:\\Users\\user\\Desktop\\projects\\diplom\\client\\src\\todo\\RegisterForm.js":"13","C:\\Users\\user\\Desktop\\projects\\diplom\\client\\src\\hooks\\auth.hook.js":"14","C:\\Users\\user\\Desktop\\projects\\diplom\\client\\src\\context\\AuthContext.js":"15"},{"size":3879,"mtime":1641047538359,"results":"16","hashOfConfig":"17"},{"size":1763,"mtime":1641043568846,"results":"18","hashOfConfig":"17"},{"size":2076,"mtime":1641047760311,"results":"19","hashOfConfig":"17"},{"size":5450,"mtime":1641038583588,"results":"20","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"17"},{"size":3308,"mtime":1641050069315,"results":"22","hashOfConfig":"17"},{"size":1413,"mtime":1623565542226,"results":"23","hashOfConfig":"17"},{"size":3466,"mtime":1623051969080,"results":"24","hashOfConfig":"17"},{"size":3157,"mtime":1641050396889,"results":"25","hashOfConfig":"17"},{"size":348,"mtime":1620287451556,"results":"26","hashOfConfig":"17"},{"size":717,"mtime":1622136781984,"results":"27","hashOfConfig":"17"},{"size":910,"mtime":1622712530149,"results":"28","hashOfConfig":"17"},{"size":2878,"mtime":1622804707294,"results":"29","hashOfConfig":"17"},{"size":855,"mtime":1622804836004,"results":"30","hashOfConfig":"17"},{"size":203,"mtime":1622805281919,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"v1vfj4",{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"35"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"35"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"35"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"C:\\Users\\user\\Desktop\\projects\\diplom\\client\\src\\index.js",["72","73","74"],"import React, { createContext, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"./fontawesome/css/all.min.css\";\r\nimport { Provider } from \"react-redux\";\r\n//todos\r\nimport Header from \"./todo/Header.js\";\r\nimport Menu from \"./todo/Menu.js\";\r\nimport ProductList from \"./todo/ProductList.js\";\r\nimport { createStore } from \"redux\";\r\nimport { addProductToCartAction } from \"./actions/actions\";\r\nimport mainShopReduser from \"./redusers/mainReduser\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Route, BrowserRouter, Switch, Redirect } from \"react-router-dom\";\r\nimport Cart from \"./todo/Cart\";\r\nimport About from \"./todo/About\";\r\nimport LoginForm from \"./todo/LoginForm\";\r\nimport RegisterForm from \"./todo/RegisterForm\";\r\n\r\nimport OrderConfirm from \"./todo/OrderConfirm\";\r\nimport prodList from \"./prodlist.json\";\r\n\r\nimport { AuthContext } from \"./context/AuthContext\";\r\n\r\nimport { useAuth } from \"./hooks/auth.hook\";\r\n\r\nconst initialState = {\r\n  cart: [],\r\n};\r\n\r\nconst store = createStore(mainShopReduser, initialState);\r\n\r\nexport const ReduxMainContext = createContext(null);\r\n//vegetables\r\n\r\nfunction Root(props) {\r\n  const { token, userId, login, logout } = useAuth();\r\n\r\n  const isAuthenticated = !!token;\r\n\r\n  const [filterState, setFilterState] = useState({\r\n    searchValue: \"\",\r\n    pig: true,\r\n    cow: true,\r\n    sheep: true,\r\n    bird: true,\r\n  });\r\n\r\n  function searchCahgeHandler(e) {\r\n    setFilterState({ ...filterState, searchValue: e.target.value });\r\n  }\r\n  function changeCheckListener(e) {\r\n    const target = e.target;\r\n    const checked = target.checked;\r\n    setFilterState({ ...filterState, [target.value]: checked });\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        login,\r\n        token,\r\n        logout,\r\n        userId,\r\n        isAuthenticated,\r\n      }}\r\n    >\r\n      <BrowserRouter>\r\n        <Header key=\"header\" />\r\n        <main>\r\n         \r\n          <Switch>\r\n            <Route path=\"/shop\">\r\n            <Menu\r\n            filterState={{\r\n              pig: filterState.pig,\r\n              cow: filterState.cow,\r\n              sheep: filterState.sheep,\r\n              bird: filterState.bird,\r\n            }}\r\n            changeCheckListener={changeCheckListener}\r\n            key=\"menu\"\r\n            searchCahgeHandler={searchCahgeHandler}\r\n            value={filterState.searchValue}\r\n          />\r\n              <ProductList\r\n                filterState={{\r\n                  pig: filterState.pig,\r\n                  cow: filterState.cow,\r\n                  sheep: filterState.sheep,\r\n                  bird: filterState.bird,\r\n                }}\r\n                searchValue={filterState.searchValue}\r\n                prodList={prodList}\r\n              />\r\n            </Route>\r\n            <Route path=\"/cart\">\r\n              \r\n              <Cart />\r\n            </Route>\r\n            <Route path=\"/about\">\r\n              <About />\r\n            </Route>\r\n            <Route path=\"/confirm\">\r\n              <OrderConfirm />\r\n            </Route>\r\n            <Route path=\"/login\">\r\n              <LoginForm isAuthenticated={isAuthenticated} />\r\n            </Route>\r\n            <Route path=\"/register\">\r\n              <RegisterForm />\r\n            </Route>\r\n            <Redirect to=\"/shop\"></Redirect>\r\n          </Switch>\r\n        </main>\r\n      </BrowserRouter>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nReactDOM.render(\r\n  <ReduxMainContext.Provider value={store}>\r\n    <Root></Root>\r\n  </ReduxMainContext.Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nexport default store;\r\n\r\n// export default ReduxMainContext;\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n",["75","76"],"C:\\Users\\user\\Desktop\\projects\\diplom\\client\\src\\todo\\Header.js",["77","78","79"],"import { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ReduxMainContext } from \"../index\";\r\nimport \"./HeaderStyle.css\";\r\nimport { Navbar, NavLink , Nav  } from \"reactstrap\";\r\n// Меняй массив ниже что бы изменить шапку\r\n\r\nlet defaultHeaderList = [\r\n  { text: \"Оплата и доставка\", href: \"/howToPay\" },\r\n\r\n  { text: \"Каталог\", href: \"/shop\" },\r\n  { text: \"Корзина\", href: \"/cart\" },\r\n  { text: \"Вход\", href: \"/login\" },\r\n];\r\n\r\n// Меняй массив выше что бы изменить шапку\r\n\r\nfunction HeaderLi(props) {\r\n  const headerContent = defaultHeaderList.map((headerElement) => (\r\n    <NavLink >\r\n      <Link to={headerElement.href}>{headerElement.text}</Link>\r\n    </NavLink >\r\n  ));\r\n\r\n  return headerContent;\r\n}\r\n\r\nfunction Header() {\r\n  const store = useContext(ReduxMainContext);\r\n\r\n  const [cartCount, setCartCount] = useState(0);\r\n\r\n  function handleChange() {\r\n    setCartCount(store.getState().cart.length);\r\n  }\r\n\r\n  const unsubscribe = store.subscribe(handleChange);\r\n\r\n  return (\r\n    <header id=\"header\">\r\n      <Navbar color=\"danger\"  dark style={{listStyle:'none'}}>\r\n       <Nav>\r\n       <NavLink >\r\n          <Link to=\"/about\">Оплата и доставка</Link>\r\n        </NavLink >\r\n        <NavLink >\r\n          <Link to=\"/shop\">Каталог</Link>\r\n        </NavLink >\r\n\r\n        <NavLink >\r\n          <Link to=\"/cart\">\r\n            Корзина <div id=\"cartCounter\">{cartCount}</div>\r\n          </Link>\r\n        </NavLink >\r\n       </Nav>\r\n        {/* <NavLink >\r\n    <Link to='/howToPay'>Вход</Link>\r\n    </NavLink > */}\r\n      </Navbar>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\user\\Desktop\\projects\\diplom\\client\\src\\todo\\Menu.js",["80","81","82","83","84"],"import { render } from \"@testing-library/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./MenuStyle.css\";\r\nimport{Input, Label} from 'reactstrap'\r\nfunction CategoryCheckBox(props) {\r\nconst filterState = props.filterState;\r\n  const [render, setRender] = useState(true);\r\n  const changeCheckListener = props.changeCheckListener;\r\n  return (\r\n    <>\r\n      <li className='filterCheckBox'>\r\n        \r\n        <Input checked={filterState.pig} id=\"pig\" type=\"checkbox\" name=\"pig\" value=\"pig\" onChange={changeCheckListener}/>\r\n        <Label for=\"pig\">Свинина</Label>\r\n      </li>\r\n      <li className='filterCheckBox'>\r\n        \r\n        <Input checked={filterState.cow} id=\"cow\"  type=\"checkbox\" name=\"cow\" value=\"cow\" onChange={changeCheckListener}/>\r\n        <Label for=\"cow\">Говядина</Label>\r\n      </li>\r\n      <li className='filterCheckBox'>\r\n        \r\n        <Input checked={filterState.sheep} id = 'sheep' type=\"checkbox\" name=\"sheep\" value=\"sheep\" onChange={changeCheckListener}/>\r\n        <Label for=\"sheep\">Баранина</Label>\r\n      </li>\r\n      <li className='filterCheckBox'>\r\n        \r\n        <Input checked={filterState.bird} id = 'bird' type=\"checkbox\" name=\"bird\" value=\"bird\" onChange={changeCheckListener}/>\r\n        <Label for=\"bird\">Мясо птицы</Label>\r\n      </li>\r\n    \r\n    </>\r\n  );\r\n}\r\nfunction Search(props) {\r\n  return (\r\n    <li className=\"searchLi\">\r\n      <i id=\"searchIcon\" class=\"fas fa-search\"></i>\r\n      <input\r\n        id=\"menuSearch\"\r\n        type=\"text\"\r\n        onChange={props.searchCahgeHandler}\r\n        value={props.value}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nfunction MenuLi(props) {}\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <div id=\"menu\">\r\n    <ul style={{paddingLeft:'0'}}>\r\n        <Search\r\n          key=\"menuSearch\"\r\n          searchCahgeHandler={props.searchCahgeHandler}\r\n          value={props.value}\r\n        />\r\n        <CategoryCheckBox filterState={props.filterState} changeCheckListener={props.changeCheckListener} />\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n","C:\\Users\\user\\Desktop\\projects\\diplom\\client\\src\\todo\\ProductList.js",["85","86","87","88","89","90","91","92"],"import { render } from \"@testing-library/react\";\r\nimport \"./ProductListStyle.css\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { ReduxMainContext } from \"../index\";\r\nimport {\r\n  addProductToCartAction,\r\n  deleteProductIntoCartAction,\r\n} from \"../actions/actions\";\r\nimport {Button,Card, ButtonGroup} from 'reactstrap';\r\n// import ReduxMainContext from '../index'\r\n\r\nfunction Pagination(props) {\r\n  const pugCount = props.pugCount;\r\n  const pugNum = Math.ceil(props.order.length / 9);\r\n   const incrementPugCount= props.incrementPugCount\r\n  const decrementPugCount = props.decrementPugCount\r\n  const setPugNum = props.setPugNum\r\n  const lis = [];\r\n  for (let i = 1; i <= pugNum; i++) {\r\n    if (i == pugCount) {\r\n      lis.push(\r\n        <Button color=\"danger\" onClick={()=>{setPugNum(i-1)}} key={\"pugBtn\" + i}>\r\n          {i}\r\n        </Button>\r\n      );\r\n    } else {\r\n      lis.push(\r\n        <Button  onClick={()=>{setPugNum(i-1)}} key={\"pugBtn\" + i}>\r\n          {i}\r\n        </Button>\r\n      );\r\n    }\r\n  }\r\n  return (\r\n  <ButtonGroup style={{marginTop:'20px'}}>\r\n      <Button onClick={decrementPugCount}>{\"<\"}</Button>\r\n      {lis}\r\n\r\n      <Button onClick={incrementPugCount}>{\">\"}</Button>\r\n    </ButtonGroup>\r\n  );\r\n}\r\n\r\nfunction ProductCard(props) {\r\n  const [inACart, changeCart] = useState(false);\r\n  let elem = props.product;\r\n  function isThisElemInCart(element) {\r\n    return element.product.id == elem.id;\r\n  }\r\n  useEffect(() => {\r\n    if (contextStore.getState().cart.find(isThisElemInCart)) {\r\n      changeCart(true);\r\n    } else {\r\n      changeCart(false);\r\n    }\r\n  });\r\n  const [count, setCount] = useState(1);\r\n  const decrementCount = () => {\r\n    if (count > 0) {\r\n      setCount((count) => count - 1);\r\n    }\r\n  };\r\n  const incrementCount = () => {\r\n    setCount((count) => count + 1);\r\n  };\r\n  function changeCountInput(e) {\r\n    if (!contextStore.getState().cart.find(isThisElemInCart)) {\r\n      let value = e.target.value;\r\n      setCount(+e.target.value);\r\n    }\r\n  }\r\n  let contextStore = useContext(ReduxMainContext);\r\n  function checkMinusValueBlur(e) {\r\n    if (count < 0) {\r\n      setCount(0);\r\n    }\r\n  }\r\n  function addBtnListener() {\r\n    if (count > 0 && count != undefined) {\r\n      contextStore.dispatch(addProductToCartAction(elem, +count));\r\n      changeCart(true);\r\n    }\r\n  }\r\n  function deleteBtnListener() {\r\n    contextStore.dispatch(deleteProductIntoCartAction(elem.id));\r\n    changeCart(false);\r\n  }\r\n  return (\r\n    <>\r\n    \r\n      <Card className=\"productCard\">\r\n        <div>\r\n          <img src={elem.imgname} />\r\n          <p>\r\n            {elem.name} <span className=\"productPrice\">{elem.price.toFixed(2)}₽</span>\r\n          </p>\r\n        </div>\r\n        {/* <p>{elem.desc}</p> */}\r\n\r\n        <div>\r\n          <div className=\"countBlock\">\r\n            <Button\r\n              color=\"danger\"\r\n              size='sm'\r\n\r\n              onClick={decrementCount}\r\n              style={inACart ? { display: \"none\" } : null}\r\n            >\r\n              -\r\n            </Button>\r\n\r\n            <input\r\n              type=\"number\"\r\n              className=\"countInput\"\r\n              value={count}\r\n              onChange={changeCountInput}\r\n              onBlur={checkMinusValueBlur}\r\n            ></input>\r\n\r\n            <Button\r\n              color=\"danger\"\r\n              size='sm'\r\n              onClick={incrementCount}\r\n              style={inACart ? { display: \"none\" } : null}\r\n            >\r\n              +\r\n            </Button>\r\n          </div>\r\n          {inACart ? (\r\n            <Button  block color=\"danger\" size='sm'  onClick={deleteBtnListener}>\r\n              Убрать товар из корзины\r\n            </Button>\r\n          ) : (\r\n            <Button  block color=\"danger\" size='sm'  onClick={addBtnListener}>\r\n              Добавить в корзину\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction ProductList(props) {\r\n  const prodList = props.prodList;\r\n  const filterState = props.filterState;\r\n  const searchValue = props.searchValue;\r\n  const [pugCount, setPugCount] = useState(0);\r\n  function incrementPugCount() {\r\n    if (pugCount < pugLen-1) {\r\n      setPugCount(pugCount+1);\r\n    }\r\n  }\r\n  function decrementPugCount() {\r\n    if (pugCount > 0) {\r\n      setPugCount(pugCount-1);\r\n    }\r\n    console.log(pugCount)\r\n  }\r\n  function setPugNum(pugNum) {\r\n    setPugCount(pugNum);\r\n  }\r\n  const order = [];\r\n  for(let i = 0; i<prodList.length; i++){\r\n    if (\r\n      prodList[i].name.toLowerCase().indexOf(searchValue.toLowerCase()) != -1 &&\r\n      filterState[ prodList[i].category]\r\n    ) {\r\n      order.push (\r\n        <>\r\n          <ProductCard\r\n            product={ prodList[i]}\r\n            key={ prodList[i].name}\r\n          ></ProductCard>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n  const pugLen = Math.ceil(order.length / 9);\r\n  return (\r\n    <>\r\n      <div id=\"productViewer\">\r\n        <div className=\"flex\">\r\n          {order.slice(pugCount * 9, (pugCount + 1) * 9)}\r\n        </div>\r\n        <div className=\"pug\">\r\n          <Pagination\r\n            pugNum={pugLen}\r\n            order = {order}\r\n            pugCount={pugCount + 1}\r\n            incrementPugCount={incrementPugCount}\r\n            decrementPugCount = {decrementPugCount}\r\n            setPugNum = {setPugNum}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default ProductList;\r\n","C:\\Users\\user\\Desktop\\projects\\diplom\\client\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\projects\\diplom\\client\\src\\todo\\Cart.js",["93","94","95","96","97","98","99"],"import { render } from \"@testing-library/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { ReduxMainContext } from \"../index\";\r\nimport { deleteProductIntoCartAction } from \"../actions/actions\";\r\nimport \"./CartStyle.css\";\r\nimport {Button} from 'reactstrap'\r\nfunction DeleteBtn(props) {\r\n  const id = props.productId;\r\n  const deleteListenr = props.deleteListenr;\r\n  const store = useContext(ReduxMainContext);\r\n  const [isRemove, setRemove] = useState(false)\r\nif(!isRemove){\r\n  return (\r\n    <Button\r\n    color=\"danger\"\r\n      onClick={() => {\r\n        deleteListenr(id);\r\n        setRemove(true)\r\n      }}\r\n    >\r\n      Удалить\r\n    </Button>\r\n  );\r\n    }\r\n    else{\r\n      return(\r\n        <Button\r\n\r\n        >Товар удалён</Button>\r\n      )\r\n    }\r\n}\r\n\r\nfunction ProductPosition(props) {\r\n  const id = props.id;\r\n  const name = props.name;\r\n  const desc = props.desc;\r\n  const imgname = props.imgname;\r\n  const price = props.price;\r\n  const count = props.count;\r\n  const totalPrice = 12334;\r\n  const [isVisible, Hide] = useState(true);\r\n  const store = useContext(ReduxMainContext);\r\n  function deleteListenr(id) {\r\n    store.dispatch(deleteProductIntoCartAction(name));\r\n    Hide(false);\r\n  }\r\n\r\n  return (\r\n    <tr className=\"cartTable__row\">\r\n      <td>\r\n        <img className=\"cart__img\" src={imgname} />\r\n      </td>\r\n      <td>{name}</td>\r\n\r\n      <td>{price}</td>\r\n      <td>{count}</td>\r\n      <td>{(count*price).toFixed(2)}</td>\r\n      <td className='btnTd'>\r\n        <DeleteBtn deleteListenr={deleteListenr} productId={id} />\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nfunction Cart(props) {\r\n  const store = useContext(ReduxMainContext);\r\n\r\n  let productListFromStore = store.getState().cart;\r\n  let totalPrice = 0;\r\n  const ProductPositionList = productListFromStore.map((product) => {\r\n   \r\n    totalPrice +=product.product.price*product.count;\r\n    return (\r\n      <ProductPosition\r\n        name={product.product.name}\r\n        price={product.product.price}\r\n        count={product.count}\r\n        imgname={product.product.imgname}\r\n      />\r\n    );\r\n  });\r\n  if(ProductPositionList.length>0){\r\n  return (\r\n    <div id=\"cartViewer\">\r\n      <h1>Корзина</h1>\r\n      <br />\r\n      <table className=\"cart__table\">\r\n        <tbody>\r\n          <tr className=\"cartTable__row\">\r\n            <td>\r\n\r\n            </td>\r\n            <td><b>Название</b></td>\r\n\r\n            <td><b>Цена</b></td>\r\n            <td><b>Количество</b></td>\r\n            <td><b>Стоймость</b></td>\r\n            <td>\r\n             \r\n            </td>\r\n          </tr>\r\n          {ProductPositionList}\r\n\r\n          <tr className=\"cartTable__row\">\r\n      <td>\r\n        \r\n      </td>\r\n      <td>Итого:</td>\r\n      <td></td>\r\n\r\n     \r\n      <td></td>\r\n      <td>{totalPrice.toFixed(2)}</td>\r\n      <td >\r\n        \r\n      </td>\r\n    </tr>\r\n        </tbody>\r\n      </table>\r\n      <Button color=\"danger\"><Link to='/confirm'>Оформить заказ</Link></Button>\r\n    </div>\r\n  );\r\n  }\r\n  else{\r\n    return(\r\n      <div id=\"cartViewer\">\r\n      <h1>Корзина</h1>\r\n      <br />\r\n      <h2 className='bigTopMargin'>Корзина пуста</h2>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Cart;\r\n","C:\\Users\\user\\Desktop\\projects\\diplom\\client\\src\\todo\\About.js",[],"C:\\Users\\user\\Desktop\\projects\\diplom\\client\\src\\todo\\LoginForm.js",["100","101","102","103","104","105","106"],"import { render } from \"@testing-library/react\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ReduxMainContext } from \"../index\";\r\nimport \"./OrderConfirmStyle.css\";\r\nimport { useHttp } from \"../hooks/http.hook\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nfunction OrderList(props) {\r\n  const orderList = props.orderList;\r\n  const { request } = useHttp();\r\n  const auth = useContext(AuthContext);\r\n  const loginHandler = async () => {\r\n    try {\r\n      const data = await request(\"/api/auth/orders\", \"POST\",{\r\n        Authorization: `Bearer ${auth.token}`\r\n      });\r\n      console.log(data);\r\n     \r\n    } catch (e) {\r\n      if (e.name != \"SyntaxError\") {\r\n        alert(e.message);\r\n      } else {\r\n        alert(\"Что-то пошло не так. Попробуйте снова\");\r\n      }\r\n    }\r\n    \r\n  }; \r\n  useEffect(()=>{\r\n    loginHandler()\r\n  },[])\r\n \r\n  return (\r\n    <div>\r\n      <h1>Заказы</h1>\r\n      {orderList + \"\"}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction LoginForm(props) {\r\n  const { loading, error, request } = useHttp();\r\n  const auth = useContext(AuthContext);\r\n  const loginHandler = async () => {\r\n    try {\r\n      console.log(formData);\r\n      const data = await request(\"/api/auth/login\", \"POST\", { ...formData });\r\n      auth.login(data.token, data.userId);\r\n      if (error) {\r\n      }\r\n    } catch (e) {\r\n      if (e.name != \"SyntaxError\") {\r\n        alert(e.message);\r\n      } else {\r\n        alert(\"Что-то пошло не так. Попробуйте снова\");\r\n      }\r\n    }\r\n  };\r\n  const store = useContext(ReduxMainContext);\r\n  const [formData, setFormData] = useState({\r\n    login: \"\",\r\n    password: \"\",\r\n  });\r\n  function changeFormHandler(e) {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  function sendOrder() {\r\n    // const form = document.getElementById(\"orderForm\");\r\n    // const formEls = form;\r\n\r\n    console.log(formData);\r\n    // form.submit();\r\n  }\r\n\r\n  if (!props.isAuthenticated) {\r\n    return (\r\n      <div id=\"cartViewer\">\r\n        <h1>Вход</h1>\r\n        <form id=\"orderForm\" className=\"orderForm\" method=\"POST\">\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <label>Логин</label>\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    onChange={changeFormHandler}\r\n                    value={formData.login}\r\n                    name=\"login\"\r\n                    type=\"text\"\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>Пароль</label>\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    onChange={changeFormHandler}\r\n                    value={formData.password}\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                  />\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          {/* <input name=\"cart\" type=\"hidden\" /> */}\r\n          <div\r\n            id=\"orderBtn\"\r\n            colspan=\"2\"\r\n            style={{ textAlign: \"center\" }}\r\n            onClick={loginHandler}\r\n            disabled={loading}\r\n          >\r\n            Войти\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <OrderList />;\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","C:\\Users\\user\\Desktop\\projects\\diplom\\client\\src\\todo\\OrderConfirm.js",["107","108","109","110","111","112","113"],"import { render } from \"@testing-library/react\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ReduxMainContext } from \"../index\";\r\nimport { useHttp } from \"../hooks/http.hook\";\r\n\r\nimport \"./OrderConfirmStyle.css\";\r\nimport { Button, Input, Label } from \"reactstrap\";\r\n\r\nfunction OrderConfirm(prop) {\r\n  const store = useContext(ReduxMainContext);\r\n\r\n  const { loading, error, request } = useHttp();\r\n  function sendOrder() {\r\n    const form = document.getElementById(\"orderForm\");\r\n    const formEls = form;\r\n    \r\n    const formData = {\r\n      isSended: false,\r\n      products: store.getState().cart,\r\n\r\n      clientData: {\r\n        firstName: formEls[\"firstName\"].value,\r\n\r\n        address: formEls[\"address\"].value,\r\n\r\n        phone: formEls[\"phone\"].value,\r\n        surname: formEls[\"surname\"].value,\r\n\r\n        mail: formEls[\"mail\"].value,\r\n      },\r\n\r\n      // orders:[{type: Types.ObjectId, ref:'Orders'}]\r\n    };\r\n  \r\n   \r\n    const loginHandler = async () => {\r\n      try {\r\n        console.log(formData);\r\n        const data = await request(\"/api/auth/order\", \"POST\", { ...formData });\r\n       \r\n        if (error) {\r\n        }\r\n      } catch (e) {\r\n        if (e.name != \"SyntaxError\") {\r\n          alert(e.message);\r\n        } else {\r\n          alert(\"Что-то пошло не так. Попробуйте снова\");\r\n        }\r\n      }\r\n      \r\n    };\r\n   \r\n    loginHandler();\r\n   \r\n\r\n\r\n  \r\n    // form.submit();\r\n  }\r\n  return (\r\n    <div id=\"cartViewer\">\r\n      <h1>Оформление заказа</h1>\r\n      <form id=\"orderForm\" className=\"orderForm\" method=\"POST\">\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <Label>Фамилия</Label>\r\n              </td>\r\n              <td>\r\n                <Input name=\"surname\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <Label>Имя</Label>\r\n              </td>\r\n              <td>\r\n                <Input name=\"firstName\" />\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>\r\n                <Label>Адрес проживания</Label>\r\n              </td>\r\n              <td>\r\n                <Input name=\"address\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <Label>Номер телефона</Label>\r\n              </td>\r\n              <td>\r\n                <Input name=\"phone\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <Label>Электронная почта</Label>\r\n              </td>\r\n              <td>\r\n                <Input name=\"mail\" />\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        {/* <Input name=\"cart\" type=\"hidden\" /> */}\r\n        <Button\r\n      \r\n        size='lg'\r\n          color=\"danger\"\r\n          colspan=\"2\"\r\n          style={{ textAlign: \"center\" }}\r\n          onClick={sendOrder}\r\n        >\r\n          Заказать\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderConfirm;\r\n","C:\\Users\\user\\Desktop\\projects\\diplom\\client\\src\\actions\\actions.js",[],"C:\\Users\\user\\Desktop\\projects\\diplom\\client\\src\\redusers\\mainReduser.js",["114","115","116","117"],"\r\n// import store from '../index'\r\n// console.log(store)\r\nfunction mainShopReduser(state , action) {\r\n  \r\n  switch (action.type) {\r\n    case 'ADD_PRODUCT_TO_CART':\r\n      console.log( state);\r\n     \r\n      return {...state, cart: [...state.cart, action.payload]}\r\n      break;\r\n      case 'DELETE_PRODUCT_INTO_CART':\r\n        console.log( state);\r\n        let index = state.cart.findIndex(item => item.product.id == action.payload)\r\n      let newCart = state.cart\r\n      newCart.splice(index,1 ) \r\n        return {...state, cart:newCart}\r\n        break;\r\n    default:\r\n      return {...state}\r\n      break;\r\n  }\r\n\r\n}\r\n\r\n\r\n// const initialState = {\r\n//   cart: [{name:123}],\r\n// };\r\n\r\nexport default mainShopReduser;\r\n","C:\\Users\\user\\Desktop\\projects\\diplom\\client\\src\\hooks\\http.hook.js",[],"C:\\Users\\user\\Desktop\\projects\\diplom\\client\\src\\todo\\RegisterForm.js",["118","119","120","121","122","123","124","125"],"import { render } from \"@testing-library/react\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ReduxMainContext } from \"../index\";\r\nimport \"./OrderConfirmStyle.css\";\r\nimport { useHttp } from \"../hooks/http.hook\";\r\n\r\nfunction RegisterForm(prop) {\r\n  const { loading, error, request } = useHttp();\r\n\r\n    const loginHandler = async ()=>{\r\n        try {\r\n           \r\n            const data = await request(\"/api/auth/register\", \"POST\", {...formData})\r\n           \r\n        } catch (e) {\r\n        \r\n            if(e.name != 'SyntaxError'){\r\n                alert(e.message)\r\n            }else{\r\n                alert('Что-то пошло не так. Попробуйте снова')\r\n            }\r\n        }\r\n    }\r\n  const store = useContext(ReduxMainContext);\r\n  const [formData, setFormData] = useState({\r\n    login: \"\",\r\n    password: \"\",\r\n    key: \"\",\r\n\r\n  });\r\n  function changeFormHandler(e) {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  function sendOrder() {\r\n    // const form = document.getElementById(\"orderForm\");\r\n    // const formEls = form;\r\n\r\n    console.log(formData);\r\n    // form.submit();\r\n  }\r\n  return (\r\n    <div id=\"cartViewer\">\r\n      <h1>Вход</h1>\r\n      <form id=\"orderForm\" className=\"orderForm\" method=\"POST\">\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <label>Логин</label>\r\n              </td>\r\n              <td>\r\n                <input\r\n                  onChange={changeFormHandler}\r\n                  value={formData.login}\r\n                  name=\"login\"\r\n                  type=\"text\"\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <label>Пароль</label>\r\n              </td>\r\n              <td>\r\n                <input\r\n                  onChange={changeFormHandler}\r\n                  value={formData.password}\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                />\r\n              </td>\r\n              \r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <label>Ключ</label>\r\n              </td>\r\n              <td>\r\n                <input\r\n                  onChange={changeFormHandler}\r\n                  value={formData.key}\r\n                  name=\"key\"\r\n                  type=\"password\"\r\n                />\r\n              </td>\r\n              \r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        {/* <input name=\"cart\" type=\"hidden\" /> */}\r\n        <div\r\n          id=\"orderBtn\"\r\n          colspan=\"2\"\r\n          style={{ textAlign: \"center\" }}\r\n          onClick={loginHandler}\r\n          disabled={loading}\r\n        >\r\n          Войти\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterForm;\r\n","C:\\Users\\user\\Desktop\\projects\\diplom\\client\\src\\hooks\\auth.hook.js",[],"C:\\Users\\user\\Desktop\\projects\\diplom\\client\\src\\context\\AuthContext.js",[],{"ruleId":"126","severity":1,"message":"127","line":5,"column":10,"nodeType":"128","messageId":"129","endLine":5,"endColumn":18},{"ruleId":"126","severity":1,"message":"130","line":11,"column":10,"nodeType":"128","messageId":"129","endLine":11,"endColumn":32},{"ruleId":"126","severity":1,"message":"131","line":13,"column":8,"nodeType":"128","messageId":"129","endLine":13,"endColumn":23},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"126","severity":1,"message":"136","line":1,"column":22,"nodeType":"128","messageId":"129","endLine":1,"endColumn":31},{"ruleId":"126","severity":1,"message":"137","line":18,"column":10,"nodeType":"128","messageId":"129","endLine":18,"endColumn":18},{"ruleId":"126","severity":1,"message":"138","line":37,"column":9,"nodeType":"128","messageId":"129","endLine":37,"endColumn":20},{"ruleId":"126","severity":1,"message":"139","line":1,"column":10,"nodeType":"128","messageId":"129","endLine":1,"endColumn":16},{"ruleId":"126","severity":1,"message":"136","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":19},{"ruleId":"126","severity":1,"message":"140","line":7,"column":10,"nodeType":"128","messageId":"129","endLine":7,"endColumn":16},{"ruleId":"126","severity":1,"message":"141","line":7,"column":18,"nodeType":"128","messageId":"129","endLine":7,"endColumn":27},{"ruleId":"126","severity":1,"message":"142","line":49,"column":10,"nodeType":"128","messageId":"129","endLine":49,"endColumn":16},{"ruleId":"126","severity":1,"message":"139","line":1,"column":10,"nodeType":"128","messageId":"129","endLine":1,"endColumn":16},{"ruleId":"143","severity":1,"message":"144","line":20,"column":11,"nodeType":"145","messageId":"146","endLine":20,"endColumn":13},{"ruleId":"143","severity":1,"message":"144","line":48,"column":31,"nodeType":"145","messageId":"146","endLine":48,"endColumn":33},{"ruleId":"147","severity":1,"message":"148","line":50,"column":3,"nodeType":"128","endLine":50,"endColumn":12,"suggestions":"149"},{"ruleId":"126","severity":1,"message":"150","line":68,"column":11,"nodeType":"128","messageId":"129","endLine":68,"endColumn":16},{"ruleId":"143","severity":1,"message":"151","line":79,"column":28,"nodeType":"145","messageId":"146","endLine":79,"endColumn":30},{"ruleId":"152","severity":1,"message":"153","line":93,"column":11,"nodeType":"154","endLine":93,"endColumn":37},{"ruleId":"143","severity":1,"message":"151","line":166,"column":73,"nodeType":"145","messageId":"146","endLine":166,"endColumn":75},{"ruleId":"126","severity":1,"message":"139","line":1,"column":10,"nodeType":"128","messageId":"129","endLine":1,"endColumn":16},{"ruleId":"126","severity":1,"message":"136","line":3,"column":29,"nodeType":"128","messageId":"129","endLine":3,"endColumn":38},{"ruleId":"126","severity":1,"message":"155","line":11,"column":9,"nodeType":"128","messageId":"129","endLine":11,"endColumn":14},{"ruleId":"126","severity":1,"message":"156","line":38,"column":9,"nodeType":"128","messageId":"129","endLine":38,"endColumn":13},{"ruleId":"126","severity":1,"message":"157","line":42,"column":9,"nodeType":"128","messageId":"129","endLine":42,"endColumn":19},{"ruleId":"126","severity":1,"message":"158","line":43,"column":10,"nodeType":"128","messageId":"129","endLine":43,"endColumn":19},{"ruleId":"152","severity":1,"message":"153","line":53,"column":9,"nodeType":"154","endLine":53,"endColumn":52},{"ruleId":"126","severity":1,"message":"139","line":1,"column":10,"nodeType":"128","messageId":"129","endLine":1,"endColumn":16},{"ruleId":"126","severity":1,"message":"159","line":3,"column":10,"nodeType":"128","messageId":"129","endLine":3,"endColumn":14},{"ruleId":"143","severity":1,"message":"151","line":21,"column":18,"nodeType":"145","messageId":"146","endLine":21,"endColumn":20},{"ruleId":"147","severity":1,"message":"160","line":31,"column":5,"nodeType":"161","endLine":31,"endColumn":7,"suggestions":"162"},{"ruleId":"143","severity":1,"message":"151","line":52,"column":18,"nodeType":"145","messageId":"146","endLine":52,"endColumn":20},{"ruleId":"126","severity":1,"message":"155","line":59,"column":9,"nodeType":"128","messageId":"129","endLine":59,"endColumn":14},{"ruleId":"126","severity":1,"message":"163","line":68,"column":12,"nodeType":"128","messageId":"129","endLine":68,"endColumn":21},{"ruleId":"126","severity":1,"message":"139","line":1,"column":10,"nodeType":"128","messageId":"129","endLine":1,"endColumn":16},{"ruleId":"126","severity":1,"message":"136","line":2,"column":22,"nodeType":"128","messageId":"129","endLine":2,"endColumn":31},{"ruleId":"126","severity":1,"message":"164","line":2,"column":33,"nodeType":"128","messageId":"129","endLine":2,"endColumn":41},{"ruleId":"126","severity":1,"message":"159","line":3,"column":10,"nodeType":"128","messageId":"129","endLine":3,"endColumn":14},{"ruleId":"126","severity":1,"message":"165","line":13,"column":11,"nodeType":"128","messageId":"129","endLine":13,"endColumn":18},{"ruleId":"126","severity":1,"message":"166","line":40,"column":15,"nodeType":"128","messageId":"129","endLine":40,"endColumn":19},{"ruleId":"143","severity":1,"message":"151","line":45,"column":20,"nodeType":"145","messageId":"146","endLine":45,"endColumn":22},{"ruleId":"167","severity":1,"message":"168","line":11,"column":7,"nodeType":"169","messageId":"170","endLine":11,"endColumn":13},{"ruleId":"143","severity":1,"message":"144","line":14,"column":66,"nodeType":"145","messageId":"146","endLine":14,"endColumn":68},{"ruleId":"167","severity":1,"message":"168","line":18,"column":9,"nodeType":"169","messageId":"170","endLine":18,"endColumn":15},{"ruleId":"167","severity":1,"message":"168","line":21,"column":7,"nodeType":"169","messageId":"170","endLine":21,"endColumn":13},{"ruleId":"126","severity":1,"message":"139","line":1,"column":10,"nodeType":"128","messageId":"129","endLine":1,"endColumn":16},{"ruleId":"126","severity":1,"message":"136","line":2,"column":22,"nodeType":"128","messageId":"129","endLine":2,"endColumn":31},{"ruleId":"126","severity":1,"message":"159","line":3,"column":10,"nodeType":"128","messageId":"129","endLine":3,"endColumn":14},{"ruleId":"126","severity":1,"message":"171","line":9,"column":20,"nodeType":"128","messageId":"129","endLine":9,"endColumn":25},{"ruleId":"126","severity":1,"message":"166","line":14,"column":19,"nodeType":"128","messageId":"129","endLine":14,"endColumn":23},{"ruleId":"143","severity":1,"message":"151","line":18,"column":23,"nodeType":"145","messageId":"146","endLine":18,"endColumn":25},{"ruleId":"126","severity":1,"message":"155","line":25,"column":9,"nodeType":"128","messageId":"129","endLine":25,"endColumn":14},{"ruleId":"126","severity":1,"message":"163","line":36,"column":12,"nodeType":"128","messageId":"129","endLine":36,"endColumn":21},"no-unused-vars","'Provider' is defined but never used.","Identifier","unusedVar","'addProductToCartAction' is defined but never used.","'reportWebVitals' is defined but never used.","no-native-reassign",["172"],"no-negated-in-lhs",["173"],"'useEffect' is defined but never used.","'HeaderLi' is defined but never used.","'unsubscribe' is assigned a value but never used.","'render' is defined but never used.","'render' is assigned a value but never used.","'setRender' is assigned a value but never used.","'MenuLi' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'changeCart'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [contextStore, isThisElemInCart] as a second argument to the useEffect Hook.",["174"],"'value' is assigned a value but never used.","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'store' is assigned a value but never used.","'desc' is assigned a value but never used.","'totalPrice' is assigned a value but never used.","'isVisible' is assigned a value but never used.","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'loginHandler'. Either include it or remove the dependency array.","ArrayExpression",["175"],"'sendOrder' is defined but never used.","'useState' is defined but never used.","'loading' is assigned a value but never used.","'data' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},"Add dependencies array: [contextStore, isThisElemInCart]",{"range":"180","text":"181"},"Update the dependencies array to be: [loginHandler]",{"range":"182","text":"183"},[1616,1616],", [contextStore, isThisElemInCart]",[909,911],"[loginHandler]"]